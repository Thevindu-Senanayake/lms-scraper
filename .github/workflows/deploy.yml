name: Deploy Discord Bot

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # Use Python 3.13 because some requirements (audioop-lts) require >=3.13
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: "Check required secrets and repo variables"
        run: |
          # Keep checking deployment secrets (droplet and ssh key)
          if [ -z "${{ secrets.DROPLET_IP }}" ]; then
            echo "DROPLET_IP secret is NOT set!"
          else
            echo "DROPLET_IP secret is set."
          fi
          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "SSH_PRIVATE_KEY secret is NOT set!"
          else
            echo "SSH_PRIVATE_KEY secret is set."
          fi
          if [ -z "${{ secrets.SSH_PASSPHRASE }}" ]; then
            echo "SSH_PASSPHRASE secret is NOT set (this is ok if your key has no passphrase)."
          else
            echo "SSH_PASSPHRASE secret is set."
          fi
          if [ -z "${{ secrets.DISCORD_BOT_TOKEN }}" ]; then
            echo "DISCORD_BOT_TOKEN repo variable is NOT set!"
          else
            echo "DISCORD_BOT_TOKEN repo variable is set."
          fi
          if [ -z "${{ vars.DISCORD_NOTIFY_CHANNEL_ID }}" ]; then
            echo "DISCORD_NOTIFY_CHANNEL_ID repo variable is NOT set!"
          else
            echo "DISCORD_NOTIFY_CHANNEL_ID repo variable is set."
          fi
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /root/lms-discord-bot

            git pull origin main

            cat > /root/lms-discord-bot/.env <<'EOF'
              DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}
              DISCORD_NOTIFY_CHANNEL_ID=${{ vars.DISCORD_NOTIFY_CHANNEL_ID }}
              DISCORD_LOG_CHANNEL_ID=${{ vars.DISCORD_LOG_CHANNEL_ID }}
              DISCORD_LOG_LEVEL=${{ vars.DISCORD_LOG_LEVEL }}
              DISCORD_ADMIN_ROLE=${{ vars.DISCORD_ADMIN_ROLE }}
              DISCORD_WHITELISTED_IDS=${{ vars.DISCORD_WHITELISTED_IDS }}
            EOF
            chmod 600 /root/lms-discord-bot/.env || true

            # Try to create a venv with python3.13 if available (fallback to python3)
            python3.13 -m venv venv 2>/dev/null || python3 -m venv venv

            source venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt

            sudo systemctl restart discord-bot.service
